<div class="container mt-4">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card">
          <div class="card-header">Edit profile</div>
          <div class="card-body">
            <form method="POST" class="needs-validation form-signup" novalidate>
              <div class="form-row mt-2">
                <div class="col">
                  <label for="name">Name</label>
                  <input type="text" class="form-control" id="name" name="name" required>
                  <div class="invalid-feedback">
                    Please provide a valid Name.
                  </div>
                  <div class="valid-feedback">
                    Looks good!
                  </div>
                </div>
              </div>
              <div class="form-row mt-2">
                <div class="col">
                  <label for="email">Email</label>
                  <input type="text" class="form-control" id="email" name="email" disabled>
                  <div class="invalid-feedback">
                    Please provide a valid email.
                  </div>
                </div>
              </div>
              <div class="form-row mt-2">
                <div class="col d-flex justify-content-center">
                  <img id="preview" width="128" height="128" class="rounded-circle">
                </div>
              </div>
              <div class="form-row mt-2">
                <div class="col d-flex justify-content-center">
                  <input type="file" class="custom-file-input" id="profilePic">
                  <label class="custom-file-label" for="profilePic">Choose a profile picture...</label>
                </div>
              </div>
              <input type="hidden" id="profilePicUrl" name="profilePicUrl">
              {{!-- <hr class="my-3">
              <div class="form-row mt-2">
                <div class="col">
                  <label for="password">Old Password</label>
                  <input type="password" class="form-control" id="password" name="password" required>
                  <div class="invalid-feedback">
                    Please provide a password.
                  </div>
                </div>
              </div>
              <div class="form-row mt-2">
                <div class="col">
                  <label for="password">New Password</label>
                  <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                  <div class="invalid-feedback">
                    Please provide a vaid password.
                  </div>
                </div>
              </div> --}}
            <button class="btn btn-primary mt-4" type="submit" id="submit">Save chages</button>
            </form>
            {{#if error}}
              {{#each errorMessages}}
                <div class="alert alert-danger mt-4" role="alert">
                  {{this}}
                </div>
              {{/each}}
            {{/if}}
            {{#if success}}
                <div class="alert alert-success mt-4" role="alert">
                  All the changes were saved.
                </div>
            {{/if}}
          </div>
      </div>
  </div>
</div>

<script src="/assets/js/validate_form.js"></script>
{{> loggedUserScript }}

<script>

function fillLoggedUserData(loggedUser){
  $('#name').val(loggedUser.name);
  $('#email').val(loggedUser.email);
  $('#profilePicUrl').val(loggedUser.img);
  $('#preview').attr("src", loggedUser.img);
}

function loadingPicture(){
  var submitButton = $('#submit');
  submitButton.prop("disabled", true);
  // add spinner to button
  submitButton.html(`<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Uploading profile picture...`);
}

function pictureLoaded(){
  var submitButton = $('#submit');
  submitButton.prop("disabled", false);
  // add spinner to button
  submitButton.html(`Save chages`);
}

function getSignedRequest(file){
  const xhr = new XMLHttpRequest();
  xhr.open('GET', `/sign-s3?file-name=${encodeURIComponent(file.name)}&file-type=${encodeURIComponent(file.type)}`);
  xhr.onreadystatechange = () => {
    if(xhr.readyState === 4){
      if(xhr.status === 200){
        const response = JSON.parse(xhr.responseText);
        uploadFile(file, response.signedRequest, response.url);
      }
      else{
        alert('Could not get signed URL.');
        pictureLoaded();
      }
    }
  };
  xhr.send();
}

function uploadFile(file, signedRequest, url){
  const xhr = new XMLHttpRequest();
  xhr.open('PUT', signedRequest);
  xhr.onreadystatechange = () => {
    if(xhr.readyState === 4){
      if(xhr.status === 200){
        document.getElementById('preview').src = url;
        document.getElementById('profilePicUrl').value = url;
      }
      else{
        alert('Could not upload file.');
      }
      pictureLoaded();
    }
  };
  xhr.send(file);
}

$( document ).ready(function() {
  fillLoggedUserData(loggedUser);
  $("#profilePic").change(function() {
    var profilePic = $(this).prop('files')[0];
    if (profilePic) {
      $(this).next('.custom-file-label').html(profilePic.name);
      loadingPicture();
      getSignedRequest(profilePic);
      console.log(profilePic);
    } else {
      $(this).next('.custom-file-label').html('Choose a profile picture...');
    }
  });
});

</script>